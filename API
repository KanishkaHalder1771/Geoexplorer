=============================== GEOEXPLORER API ================================

Author: Johan Hanssen Seferidis
Created: 2013-12-01
Updated: 2013-12-01

Description: This document contains the API used for adding services to Geoexplorer



==================================== Intro  ====================================

All services can be found at directory /classes/services

Each service should have a descriptive name, and if possible be the name of the
actual service. For example GoogleRadarSearch is the name used for the 
Radar Search service provided by Google.



============================== Service Blueprint  ==============================

Each service should follow the following blueprint:

class MyService:
   def search(self, box, logger):
      markers=[]
      # Populate the markers here
      return markers

markers is just a list of tupples in the form (latitute, longitude)

For each box on the map, search will be called. The object box gives the user
access to the specific area. The object logger is merely used in case logging
is wished to be added for the service. The interface for these objects are
provided bellow.



============================== Configuration file  =============================
The configuration file can be used by importing it like this:
from config import *

In most cases the configuration file should be used to read the 'scheduler' and
override some values for the box size in case the service has some constrains on
that.

From the 'scheduler' the values should be used in conjunction with the function
sleep(). For example if you want to allow your service to retry a search on fail,
then you should make your program to sleep for as much time as given in
config['scheduler']['NEXT_SEARCH_WAIT']



============================== Objects' Interface  =============================

---- Box object----

Properties:
        N                 →  Coordinates of north of the box
        E                 →  Coordinates of east of the box
        S                 →  Coordinates of south of the box
        W                 →  Coordinates of west of the box
        center            →  Coordinates of center of the box
        WN                →  Coordinates of west-north of the box
        NE                →  Coordinates of north-east of the box
        WS                →  Coordinates of west-south of the box
        SE                →  Coordinates of south-east of the box
        xMeters           →  Length of the horizontal side of the box in meters
        yMeters           →  Length of the vertical side of the box in meters
   
Methods:
        bounds()          →  Gives the bounds of the box
   

---- Logger object----

Methods:
        append(type, txt) →  Appends txt to file specified by type:
                             type - a string: type of log file (scan* or result**)
                             txt  - a string: the message to append  

scan* is used for appending a message that has to do with the search for this box.
result** is used for appending each marker and other info connected to the
         marker that you might want.



=============================== Gettools Library ===============================

In /lib/geotools.py some tools can be found that can be used to assist in the
development for a new service. This module is included in Service.py so you can
use the following functions directly inside your new service.

   dist(lat1, lon1, lat2, lon2) → Gives the distance between two geographical
                                  points in meters
   middleLat(lat1, lat2)	     → Gives the middle latitude between two latitudes
   middleLng(lng1, lng2)	     → Gives the middle longitude between two longitudes
   getCountryCode(lat, lng):    → Gives the country code at specific coordinates.
                                  Return can be: 'UNKNOWN'', <country_code> or None


